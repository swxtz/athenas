// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
}

model User {
  id   String @id @default(cuid())
  name String

  email              String    @unique
  emailVerified      Boolean   @default(false) @map("email_verified")
  emailVerificatedAt DateTime? @map("email_verificated_at")
  password           String

  userType UserType @default(consumer) @map("user_type")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

enum UserType {
  consumer
  admim
}

model Product {
  id String @id @default(uuid())

  name        String
  description String
  buyPrice    Int     @map("buy_price")
  price       Int
  stock       Int
  barcode     String?
  sku         String?
  isAvailable Boolean @default(true) @map("is_available")
  rating      Float?  @map("rating")

  coverImage String?  @map("cover_image")
  images     String[]

  productType ProductType @default(others) @map("product_type")

  state ProductState @default(available)

  localPickup Boolean @default(false) @map("local_pickup")
  //storeAvailables 

  //metrics
  numberOfSales           Int @default(0) @map("number_of_sales")
  numberOfViews           Int @default(0) @map("number_of_views")
  numberOfViewsInLastWeek Int @default(0) @map("number_of_views_in_last_week")

  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  Promotion Promotion[]

  @@map("products")
}

model Promotion {
  id        String @id @default(cuid())
  productId String @unique @map("product_id")

  product Product @relation(fields: [productId], references: [id])

  isPromotion        Boolean   @default(false) @map("is_promotion")
  promotionPrice     Int?      @map("promotion_price")
  promotionStart     DateTime? @map("promotion_start")
  promotionEnd       DateTime? @map("promotion_end")
  lastPromotion      DateTime? @map("last_promotion")
  promotionCreatedAt DateTime? @map("promotion_created_at")
  promotionCreatorId String?   @map("promotion_creator_id")
  promotionOwner     String?

  @@map("promotions")
}

enum ProductType {
  bread
  hamburger
  others
}

enum ProductState {
  available
  unavailable
  outOfStock
}

// recomendation engine
model Recommendation {
  id String @id @default(uuid())

  // foremkey
  productId String @unique @map("product_id")

  //base values 
  score             Float @default(500)
  weekRecomendation Float @default(500)

  // recomedation values

  // views
  views     Int @default(0)
  weekViews Int @default(0) @map("week_views")

  // likes
  likes     Int @default(0)
  weekLikes Int @default(0) @map("week_likes")

  // sales 
  sales     Int @default(0)
  weekSales Int @default(0) @map("week_sales")

  @@map("recommendations")
}

// 
